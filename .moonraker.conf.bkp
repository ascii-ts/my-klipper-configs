[server]
host = 0.0.0.0
port = 7125
klippy_uds_address = /tmp/klippy_uds

[file_manager]
enable_object_processing = True

[database]

[machine]
provider = systemd_dbus

[data_store]
temperature_store_size = 600
gcode_store_size = 1000

[webcam cam_printer]
location = printer
service = mjpegstreamer
target_fps = 30
stream_url = http://klipper.lan.dom:8080/?action=stream
snapshot_url = http://klipper.lan.dom:8080/?action=snapshot
flip_horizontal = False
flip_vertical = False
rotation = 0

[authorization]
trusted_clients = 
	10.0.0.0/8
	127.0.0.0/8
	169.254.0.0/16
	172.16.0.0/12
	192.168.0.0/16
	127.0.0.1
	FE80::/10
	::1/128
cors_domains = 
	*.lan
	*.local
	*://my.mainsail.xyz
	*://app.fluidd.xyz

[octoprint_compat]

[history]

[update_manager]
channel = beta
enable_auto_refresh = True

[update_manager fluidd]
type = web
channel = beta
repo = fluidd-core/fluidd
path = ~/fluidd

[update_manager client moonraker-telegram-bot]
type = git_repo
path = ~/moonraker-telegram-bot
origin = https://github.com/nlef/moonraker-telegram-bot.git
env = ~/moonraker-telegram-bot-env/bin/python
requirements = scripts/requirements.txt
install_script = scripts/install.sh

[update_manager KlipperScreen]
type = git_repo
path = ~/KlipperScreen
origin = https://github.com/jordanruthe/KlipperScreen.git
env = ~/.KlipperScreen-env/bin/python
requirements = scripts/KlipperScreen-requirements.txt
install_script = scripts/KlipperScreen-install.sh
managed_services = KlipperScreen

[update_manager mainsail]
type = web
channel = stable
repo = mainsail-crew/mainsail
path = ~/mainsail

[update_manager Klipper-Adaptive-Meshing-Purging]
type = git_repo
channel = dev
path = ~/Klipper-Adaptive-Meshing-Purging
origin = https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging.git
managed_services = klipper
primary_branch = main

